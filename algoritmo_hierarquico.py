# -*- coding: utf-8 -*-
"""Algoritmo_hierarquico.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1onnItwztN4KsM5G6cSL4mGa43gLnfSNs

# Algoritmo Hierárquico

Gabriel Oliveira Ramos do Nascimento -  RA 21022939
Matheus de Mello Santos Oliveira - RA 21396705
"""

from scipy.cluster.hierarchy import dendrogram, linkage
import matplotlib.pyplot as plt
import pandas as pd

dados_csv = pd.read_csv('https://stackabuse.s3.amazonaws.com/files/hierarchical-clustering-with-python-and-scikit-learn-shopping-data.csv')
dados_csv

dados = dados_csv.iloc[:, 3:5].values
labels = range(len(dados))
plt.figure(figsize=(10, 7))
plt.subplots_adjust(bottom=0.1)
plt.scatter(dados[:,0],dados[:,1], label='True Position', edgecolors='black')
plt.ylabel('Pontuação de Gastos')
plt.xlabel('Rendimento Anual (k$)')

for label, x, y in zip(labels, dados[:, 0], dados[:, 1]):
    plt.annotate(
        label,
        xy=(x, y), xytext=(-3, 3),
        textcoords='offset points', ha='right', va='bottom', )

plt.figure(figsize=(10, 7))
plt.title('Dendrograma')
dendrogram(linkage(dados, 'complete'), truncate_mode = 'level', p = 5)
plt.ylabel('Distância')
plt.xlabel('Clusters')
plt.show()

from sklearn.cluster import AgglomerativeClustering


modelo = AgglomerativeClustering(n_clusters = 2, affinity = 'euclidean', linkage = 'complete')
clusters = modelo.fit_predict(dados)

dados_csv['Cluster'] = clusters
dados_csv

plt.figure(figsize=(10, 7))
plt.scatter(dados[:,0], dados[:,1], c=modelo.labels_, cmap='rainbow', edgecolors='black')

plt.ylabel('Pontuação de Gastos')
plt.xlabel('Rendimento Anual (k$)')

plt.show()

plt.figure(figsize=(10, 7))
plt.title('Dendrograma')
dendrogram(linkage(dados, 'ward'), truncate_mode='level', p = 5)
plt.ylabel('Distância')
plt.xlabel('Clusters')
plt.show()

from sklearn.cluster import AgglomerativeClustering


modelo = AgglomerativeClustering(n_clusters = 5, affinity = 'euclidean', linkage = 'ward')
clusters = modelo.fit_predict(dados)

dados_csv['Cluster'] = clusters
dados_csv

plt.figure(figsize=(10, 7))
plt.scatter(dados[:,0], dados[:,1], c=modelo.labels_, cmap='rainbow', edgecolors='black')

plt.ylabel('Pontuação de Gastos')
plt.xlabel('Rendimento Anual (k$)')

plt.show()